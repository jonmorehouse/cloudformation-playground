{
  require: "shared.cson"
  Description: "S3 Bucket configurations, cdn's and distributions"
  Resources:
    LogBucket:
      Type: "AWS::S3::Bucket"
      DeletionPolicy: "Retain"
      Properties:
        BucketName: {"Fn::Join": ["-", [{ "Fn::FindInMap": ["General", {Ref: "Env"}, "BucketPrefix" ]}, "logs"]]}
        AccessControl: "Private"

    ImageBucket:
      Type: "AWS::S3::Bucket"
      DeletionPolicy: "Retain"
      Properties:
        BucketName: {"Fn::Join": ["-", [{ "Fn::FindInMap": ["General", {Ref: "Env"}, "BucketPrefix" ]}, "images"]]}
        AccessControl: "PublicRead"

    ClipBucket:
      Type: "AWS::S3::Bucket"
      DeletionPolicy: "Retain"
      Properties:
        BucketName: {"Fn::Join": ["-", [{ "Fn::FindInMap": ["General", {Ref: "Env"}, "BucketPrefix" ]}, "clips"]]}
        AccessControl: "PublicRead"

    ImageBucket:
      Type: "AWS::S3::Bucket"
      DeletionPolicy: "Retain"
      Properties:
        BucketName: {"Fn::Join": ["-", [{ "Fn::FindInMap": ["General", {Ref: "Env"}, "BucketPrefix" ]}, "cache"]]}
        AccessControl: "PublicRead"

    PlaylistBucket:
      Type: "AWS::S3::Bucket"
      DeletionPolicy: "Retain"
      Properties:
        BucketName: {"Fn::Join": ["-", [{ "Fn::FindInMap": ["General", {Ref: "Env"}, "BucketPrefix" ]}, "playlists"]]}
        AccessControl: "PublicRead"
    
  # outputs
  Outputs:
    LogBucketName: 
      Value: 
        Ref: "LogBucket"
      Description: "Log bucket Name"

}
